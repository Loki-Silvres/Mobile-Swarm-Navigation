<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from /home/pacman/turtlebot3_ws/install/turtlebot3_xacro/share/turtlebot3_xacro/urdf/turtlebot3_waffle_pi.urdf.xacro | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="turtlebot3_waffle_pi">
	<!-- Init colour -->
	<material name="black">
		<color rgba="0.0 0.0 0.0 1.0"/>
	</material>
	<material name="dark">
		<color rgba="0.3 0.3 0.3 1.0"/>
	</material>
	<material name="light_black">
		<color rgba="0.4 0.4 0.4 1.0"/>
	</material>
	<material name="blue">
		<color rgba="0.0 0.0 0.8 1.0"/>
	</material>
	<material name="green">
		<color rgba="0.0 0.8 0.0 1.0"/>
	</material>
	<material name="grey">
		<color rgba="0.5 0.5 0.5 1.0"/>
	</material>
	<material name="orange">
		<color rgba="1.0 0.4235294117647059 0.0392156862745098 1.0"/>
	</material>
	<material name="brown">
		<color rgba="0.8705882352941177 0.8117647058823529 0.7647058823529411 1.0"/>
	</material>
	<material name="red">
		<color rgba="0.8 0.0 0.0 1.0"/>
	</material>
	<material name="white">
		<color rgba="1.0 1.0 1.0 1.0"/>
	</material>
	<gazebo reference="bot_0/base_link">
		<material>Gazebo/DarkGrey</material>
	</gazebo>
	<gazebo reference="bot_0/wheel_left_link">
		<material>Gazebo/FlatBlack</material>
	</gazebo>
	<gazebo reference="bot_0/wheel_right_link">
		<material>Gazebo/FlatBlack</material>
	</gazebo>
	<gazebo reference="bot_0/caster_back_right_link">
		<material>Gazebo/FlatBlack</material>
	</gazebo>
	<gazebo reference="bot_0/caster_back_left_link">
		<material>Gazebo/FlatBlack</material>
	</gazebo>
	<gazebo reference="bot_0/april_marker_1"/>
	<gazebo reference="bot_0/april_marker_2"/>
	<gazebo reference="bot_0/april_marker_3"/>
	<gazebo reference="bot_0/april_marker_4"/>
	<gazebo reference="bot_0/imu_link">
		<sensor name="tb3_imu" type="imu">
			<always_on>true</always_on>
			<update_rate>200</update_rate>
			<imu>
				<angular_velocity>
					<x>
						<noise type="gaussian">
							<mean>0.0</mean>
							<stddev>2e-4</stddev>
						</noise>
					</x>
					<y>
						<noise type="gaussian">
							<mean>0.0</mean>
							<stddev>2e-4</stddev>
						</noise>
					</y>
					<z>
						<noise type="gaussian">
							<mean>0.0</mean>
							<stddev>2e-4</stddev>
						</noise>
					</z>
				</angular_velocity>
				<linear_acceleration>
					<x>
						<noise type="gaussian">
							<mean>0.0</mean>
							<stddev>1.7e-2</stddev>
						</noise>
					</x>
					<y>
						<noise type="gaussian">
							<mean>0.0</mean>
							<stddev>1.7e-2</stddev>
						</noise>
					</y>
					<z>
						<noise type="gaussian">
							<mean>0.0</mean>
							<stddev>1.7e-2</stddev>
						</noise>
					</z>
				</linear_acceleration>
			</imu>
			<plugin filename="libgazebo_ros_imu_sensor.so" name="turtlebot3_imu">
				<ros>
					<!-- <namespace>/tb3</namespace> -->
					<!-- <remapping>~/out:=$(arg prefix)imu</remapping> -->
					<remapping>~/out:=imu</remapping>
				</ros>
			</plugin>
		</sensor>
		<material>Gazebo/Grey</material>
	</gazebo>
	<gazebo>
		<plugin filename="libgazebo_ros_diff_drive.so" name="turtlebot3_diff_drive">
			<ros>
				<!-- <namespace>/tb3</namespace> -->
			</ros>
			<update_rate>30</update_rate>
			<!-- wheels -->
			<left_joint>wheel_left_joint</left_joint>
			<right_joint>wheel_right_joint</right_joint>
			<!-- kinematics -->
			<wheel_separation>0.287</wheel_separation>
			<wheel_diameter>0.066</wheel_diameter>
			<!-- limits -->
			<max_wheel_torque>20</max_wheel_torque>
			<max_wheel_acceleration>1.0</max_wheel_acceleration>
			<command_topic>bot_0/cmd_vel</command_topic>
			<!-- output -->
			<publish_odom>true</publish_odom>
			<publish_odom_tf>true</publish_odom_tf>
			<publish_wheel_tf>false</publish_wheel_tf>
			<odometry_topic>bot_0/odom</odometry_topic>
			<odometry_frame>bot_0/odom</odometry_frame>
			<robot_base_frame>bot_0/base_footprint</robot_base_frame>
		</plugin>
	</gazebo>
	<gazebo reference="bot_0/base_scan">
		<material>Gazebo/FlatBlack</material>
		<sensor name="hls_lfcd_lds" type="ray">
			<always_on>true</always_on>
			<visualize>true</visualize>
			<pose>-0.064 0 0.121 0 0 0</pose>
			<update_rate>5</update_rate>
			<ray>
				<scan>
					<horizontal>
						<samples>360</samples>
						<resolution>1.000000</resolution>
						<min_angle>0.000000</min_angle>
						<max_angle>6.280000</max_angle>
					</horizontal>
				</scan>
				<range>
					<min>0.120000</min>
					<max>3.5</max>
					<resolution>0.015000</resolution>
				</range>
				<noise>
					<type>gaussian</type>
					<mean>0.0</mean>
					<stddev>0.01</stddev>
				</noise>
			</ray>
			<plugin filename="libgazebo_ros_ray_sensor.so" name="turtlebot3_laserscan">
				<ros>
					<!-- <namespace>/tb3</namespace> -->
					<!-- <remapping>~/out:=$(arg prefix)scan</remapping> -->
					<remapping>~/out:=scan</remapping>
				</ros>
				<output_type>sensor_msgs/LaserScan</output_type>
				<frame_name>bot_0/base_scan</frame_name>
			</plugin>
		</sensor>
	</gazebo>
	<gazebo reference="bot_0/camera_rgb_frame">
		<sensor name="camera1" type="depth">
			<update_rate>30.0</update_rate>
			<visualize>true</visualize>
			<camera name="head">
				<horizontal_fov>1.3962634</horizontal_fov>
				<image>
					<width>800</width>
					<height>800</height>
					<format>R8G8B8</format>
				</image>
				<clip>
					<near>0.02</near>
					<far>300</far>
				</clip>
				<noise>
					<type>gaussian</type>
					<!-- Noise is sampled independently per pixel on each frame.
                That pixel's noise value is added to each of its color
                channels, which at that point lie in the range [0,1]. -->
					<mean>0.0</mean>
					<stddev>0.007</stddev>
				</noise>
			</camera>
			<plugin filename="libgazebo_ros_camera.so" name="depth_camera_controller">
				<alwaysOn>true</alwaysOn>
				<updateRate>0.0</updateRate>
				<cameraName>rrbot/camera1</cameraName>
				<depthImageTopicName>image_raw</depthImageTopicName>
				<cameraInfoTopicName>camera_info</cameraInfoTopicName>
				<pointCloudTopicName>points</pointCloudTopicName>
				<frame_name>bot_0/camera_rgb_depth_frame</frame_name>
				<hackBaseline>0.07</hackBaseline>
				<distortionK1>0.0</distortionK1>
				<distortionK2>0.0</distortionK2>
				<distortionK3>0.0</distortionK3>
				<distortionT1>0.0</distortionT1>
				<distortionT2>0.0</distortionT2>
			</plugin>
		</sensor>
	</gazebo>
	<gazebo reference="bot_0/camera_rgb_frame">
		<sensor name="camera2" type="camera">
			<update_rate>30.0</update_rate>
			<camera name="head">
				<horizontal_fov>1.3962634</horizontal_fov>
				<image>
					<width>800</width>
					<height>800</height>
					<format>R8G8B8</format>
				</image>
				<clip>
					<near>0.02</near>
					<far>300</far>
				</clip>
				<noise>
					<type>gaussian</type>
					<!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
					<mean>0.0</mean>
					<stddev>0.007</stddev>
				</noise>
			</camera>
			<plugin filename="libgazebo_ros_camera.so" name="camera_controller">
				<alwaysOn>true</alwaysOn>
				<updateRate>0.0</updateRate>
				<cameraName>rrbot/camera2</cameraName>
				<imageTopicName>image_raw</imageTopicName>
				<cameraInfoTopicName>camera_info</cameraInfoTopicName>
				<frameName>bot_0/camera_rgb_frame</frameName>
				<hackBaseline>0.07</hackBaseline>
				<distortionK1>0.0</distortionK1>
				<distortionK2>0.0</distortionK2>
				<distortionK3>0.0</distortionK3>
				<distortionT1>0.0</distortionT1>
				<distortionT2>0.0</distortionT2>
			</plugin>
		</sensor>
	</gazebo>
	<gazebo>
		<plugin filename="libgazebo_ros_joint_state_publisher.so" name="turtlebot3_joint_state">
			<ros>
				<!-- <namespace>/tb3</namespace> -->
				<remapping>~/out:=bot_0/joint_states</remapping>
			</ros>
			<update_rate>30</update_rate>
			<joint_name>wheel_left_joint</joint_name>
			<joint_name>wheel_right_joint</joint_name>
		</plugin>
	</gazebo>
	<link name="bot_0/base_footprint"/>
	<joint name="base_joint" type="fixed">
		<parent link="bot_0/base_footprint"/>
		<child link="bot_0/base_link"/>
		<origin rpy="0 0 0" xyz="0 0 0.010"/>
	</joint>
	<link name="bot_0/base_link">
		<visual>
			<origin rpy="0 0 0" xyz="-0.064 0 0.0"/>
			<geometry>
				<mesh filename="file:///home/pacman/turtlebot3_ws/install/turtlebot3_xacro/share/turtlebot3_xacro/meshes/bases/waffle_pi_base.stl" scale="0.001 0.001 0.001"/>
			</geometry>
			<material name="light_black"/>
		</visual>
		<collision>
			<origin rpy="0 0 0" xyz="-0.064 0 0.047"/>
			<geometry>
				<box size="0.266 0.266 0.094"/>
			</geometry>
		</collision>
		<inertial>
			<mass value="1.3729096e+00"/>
			<inertia ixx="8.7002718e-03" ixy="-4.7576583e-05" ixz="1.1160499e-04" iyy="8.6195418e-03" iyz="-3.5422299e-06" izz="1.4612727e-02"/>
		</inertial>
	</link>
	<joint name="wheel_left_joint" type="continuous">
		<parent link="bot_0/base_link"/>
		<child link="bot_0/wheel_left_link"/>
		<origin rpy="-1.57 0 0" xyz="0.0 0.144 0.023"/>
		<axis xyz="0 0 1"/>
		<limit effort="10" velocity="7.88"/>
	</joint>
	<link name="bot_0/wheel_left_link">
		<visual>
			<origin rpy="1.57 0 0" xyz="0 0 0"/>
			<geometry>
				<mesh filename="file:///home/pacman/turtlebot3_ws/install/turtlebot3_xacro/share/turtlebot3_xacro/meshes/wheels/left_tire.stl" scale="0.001 0.001 0.001"/>
			</geometry>
			<material name="dark"/>
		</visual>
		<collision>
			<geometry>
				<cylinder length="0.018" radius="0.033"/>
			</geometry>
			<surface>
				<friction>
					<ode>
						<mu>1</mu>
						<mu2>0</mu2>
					</ode>
				</friction>
			</surface>
		</collision>
		<inertial>
			<origin xyz="0 0 0"/>
			<mass value="2.8498940e-02"/>
			<inertia ixx="1.1175580e-05" ixy="-4.2369783e-11" ixz="-5.9381719e-09" iyy="1.1192413e-05" iyz="-1.4400107e-11" izz="2.0712558e-05"/>
		</inertial>
	</link>
	<joint name="wheel_right_joint" type="continuous">
		<parent link="bot_0/base_link"/>
		<child link="bot_0/wheel_right_link"/>
		<origin rpy="-1.57 0 0" xyz="0.0 -0.144 0.023"/>
		<axis xyz="0 0 1"/>
		<limit effort="10" velocity="7.88"/>
	</joint>
	<link name="bot_0/wheel_right_link">
		<visual>
			<origin rpy="1.57 0 0" xyz="0 0 0"/>
			<geometry>
				<mesh filename="file:///home/pacman/turtlebot3_ws/install/turtlebot3_xacro/share/turtlebot3_xacro/meshes/wheels/right_tire.stl" scale="0.001 0.001 0.001"/>
			</geometry>
			<material name="dark"/>
		</visual>
		<collision>
			<geometry>
				<cylinder length="0.018" radius="0.033"/>
			</geometry>
			<surface>
				<friction>
					<ode>
						<mu>1</mu>
						<mu2>0</mu2>
					</ode>
				</friction>
			</surface>
		</collision>
		<inertial>
			<origin xyz="0 0 0"/>
			<mass value="2.8498940e-02"/>
			<inertia ixx="1.1175580e-05" ixy="-4.2369783e-11" ixz="-5.9381719e-09" iyy="1.1192413e-05" iyz="-1.4400107e-11" izz="2.0712558e-05"/>
		</inertial>
	</link>
	<joint name="caster_back_right_joint" type="fixed">
		<parent link="bot_0/base_link"/>
		<child link="bot_0/caster_back_right_link"/>
		<origin rpy="-1.57 0 0" xyz="-0.177 -0.064 -0.004"/>
	</joint>
	<link name="bot_0/caster_back_right_link">
		<collision>
			<origin rpy="0 0 0" xyz="0 0.001 0"/>
			<geometry>
				<!--         <box size="0.030 0.009 0.020"/> -->
				<sphere radius="0.009"/>
			</geometry>
			<surface>
				<friction>
					<ode>
						<mu>0</mu>
						<mu2>0</mu2>
					</ode>
				</friction>
			</surface>
		</collision>
		<inertial>
			<origin xyz="0 0 0"/>
			<mass value="0.005"/>
			<inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
		</inertial>
	</link>
	<joint name="caster_back_left_joint" type="fixed">
		<parent link="bot_0/base_link"/>
		<child link="bot_0/caster_back_left_link"/>
		<origin rpy="-1.57 0 0" xyz="-0.177 0.064 -0.004"/>
	</joint>
	<link name="bot_0/caster_back_left_link">
		<collision>
			<origin rpy="0 0 0" xyz="0 0.001 0"/>
			<geometry>
				<!--         <box size="0.030 0.009 0.020"/> -->
				<sphere radius="0.009"/>
			</geometry>
			<surface>
				<friction>
					<ode>
						<mu>0</mu>
						<mu2>0</mu2>
					</ode>
				</friction>
			</surface>
		</collision>
		<inertial>
			<origin xyz="0 0 0"/>
			<mass value="0.005"/>
			<inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
		</inertial>
	</link>
	<joint name="imu_joint" type="fixed">
		<parent link="bot_0/base_link"/>
		<child link="bot_0/imu_link"/>
		<origin rpy="0 0 0" xyz="0.0 0 0.068"/>
	</joint>
	<link name="bot_0/imu_link">
		<inertial>
			<mass value="0.001"/>
			<inertia ixx="0.00000542" ixy="0.0" ixz="0.0" iyy="0.00002104" iyz="0.0" izz="0.00002604"/>
		</inertial>
	</link>
	<joint name="scan_joint" type="fixed">
		<parent link="bot_0/base_link"/>
		<child link="bot_0/base_scan"/>
		<origin rpy="0 0 0" xyz="-0.064 0 0.122"/>
	</joint>
	<link name="bot_0/base_scan">
		<visual>
			<origin rpy="0 0 0" xyz="0 0 0.0"/>
			<geometry>
				<mesh filename="file:///home/pacman/turtlebot3_ws/install/turtlebot3_xacro/share/turtlebot3_xacro/meshes/sensors/lds.stl" scale="0.001 0.001 0.001"/>
			</geometry>
			<material name="dark"/>
		</visual>
		<collision>
			<origin rpy="0 0 0" xyz="0.015 0 -0.0065"/>
			<geometry>
				<cylinder length="0.0315" radius="0.055"/>
			</geometry>
		</collision>
		<inertial>
			<mass value="0.114"/>
			<origin xyz="0 0 0"/>
			<inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
		</inertial>
	</link>
	<joint name="camera_joint" type="fixed">
		<origin rpy="0 0 0" xyz="0.073 -0.011 0.084"/>
		<parent link="bot_0/base_link"/>
		<child link="bot_0/camera_link"/>
	</joint>
	<link name="bot_0/camera_link">
		<collision>
			<origin rpy="0 0 0" xyz="0.005 0.011 0.013"/>
			<geometry>
				<box size="0.015 0.030 0.027"/>
			</geometry>
		</collision>
	</link>
	<joint name="camera_rgb_joint" type="fixed">
		<origin rpy="0 0 0" xyz="0.003 0.011 0.009"/>
		<parent link="bot_0/camera_link"/>
		<child link="bot_0/camera_rgb_frame"/>
	</joint>
	<link name="bot_0/camera_rgb_frame"/>
	<joint name="camera_rgb_optical_joint" type="fixed">
		<origin rpy="-1.57 0 -1.57" xyz="0 0 0"/>
		<parent link="bot_0/camera_rgb_frame"/>
		<child link="bot_0/camera_rgb_optical_frame"/>
	</joint>
	<link name="bot_0/camera_rgb_optical_frame"/>
	<!-- depth cam -->
	<joint name="camera_depth_joint" type="fixed">
		<origin rpy="0 0 0" xyz="0.003 0.011 0.009"/>
		<parent link="bot_0/camera_link"/>
		<child link="bot_0/camera_depth_frame"/>
	</joint>
	<link name="bot_0/camera_depth_frame"/>
	<joint name="camera_rgb_depth_joint" type="fixed">
		<origin rpy="-1.57 0 -1.57" xyz="0 0 0"/>
		<parent link="bot_0/camera_depth_frame"/>
		<child link="bot_0/camera_rgb_depth_frame"/>
	</joint>
	<link name="bot_0/camera_rgb_depth_frame"/>
	<link name="bot_0/marker_1">
		<visual name="marker_visual_1">
			<geometry>
				<mesh filename="file:///home/pacman/turtlebot3_ws/install/turtlebot3_xacro/share/turtlebot3_xacro/meshes/markers/april_1.dae" scale="0.001 0.001 0.001"/>
			</geometry>
			<!-- <material name="aruco_${marker_id}-material" submesh="${marker_id}"/> -->
			<!-- <texture filename="package://turtlebot3_manipulation_description/meshes/markers/aruco_${marker_id}.png"/> -->
			<!-- </material> -->
		</visual>
		<collision name="marker_collision_1">
			<geometry>
				<box size="0.1 0.1 0.0001"/>
			</geometry>
		</collision>
	</link>
	<joint name="marker_joint_1" type="fixed">
		<parent link="bot_0/base_link"/>
		<child link="bot_0/marker_1"/>
		<origin rpy="-1.57 3.14 0" xyz="-0.1 0.134 0.05"/>
	</joint>
	<link name="bot_0/marker_2">
		<visual name="marker_visual_2">
			<geometry>
				<mesh filename="file:///home/pacman/turtlebot3_ws/install/turtlebot3_xacro/share/turtlebot3_xacro/meshes/markers/april_2.dae" scale="0.001 0.001 0.001"/>
			</geometry>
			<!-- <material name="aruco_${marker_id}-material" submesh="${marker_id}"/> -->
			<!-- <texture filename="package://turtlebot3_manipulation_description/meshes/markers/aruco_${marker_id}.png"/> -->
			<!-- </material> -->
		</visual>
		<collision name="marker_collision_2">
			<geometry>
				<box size="0.1 0.1 0.0001"/>
			</geometry>
		</collision>
	</link>
	<joint name="marker_joint_2" type="fixed">
		<parent link="bot_0/base_link"/>
		<child link="bot_0/marker_2"/>
		<origin rpy="1.57 0 0" xyz="-0.1 -0.134 0.05"/>
	</joint>
	<link name="bot_0/marker_3">
		<visual name="marker_visual_3">
			<geometry>
				<mesh filename="file:///home/pacman/turtlebot3_ws/install/turtlebot3_xacro/share/turtlebot3_xacro/meshes/markers/april_3.dae" scale="0.001 0.001 0.001"/>
			</geometry>
			<!-- <material name="aruco_${marker_id}-material" submesh="${marker_id}"/> -->
			<!-- <texture filename="package://turtlebot3_manipulation_description/meshes/markers/aruco_${marker_id}.png"/> -->
			<!-- </material> -->
		</visual>
		<collision name="marker_collision_3">
			<geometry>
				<box size="0.1 0.1 0.0001"/>
			</geometry>
		</collision>
	</link>
	<joint name="marker_joint_3" type="fixed">
		<parent link="bot_0/base_link"/>
		<child link="bot_0/marker_3"/>
		<origin rpy="1.57 0 1.57" xyz="0.074 0 0.05"/>
	</joint>
	<link name="bot_0/marker_4">
		<visual name="marker_visual_4">
			<geometry>
				<mesh filename="file:///home/pacman/turtlebot3_ws/install/turtlebot3_xacro/share/turtlebot3_xacro/meshes/markers/april_4.dae" scale="0.001 0.001 0.001"/>
			</geometry>
			<!-- <material name="aruco_${marker_id}-material" submesh="${marker_id}"/> -->
			<!-- <texture filename="package://turtlebot3_manipulation_description/meshes/markers/aruco_${marker_id}.png"/> -->
			<!-- </material> -->
		</visual>
		<collision name="marker_collision_4">
			<geometry>
				<box size="0.1 0.1 0.0001"/>
			</geometry>
		</collision>
	</link>
	<joint name="marker_joint_4" type="fixed">
		<parent link="bot_0/base_link"/>
		<child link="bot_0/marker_4"/>
		<origin rpy="1.57 0 -1.57" xyz="-0.194 -0 0.05"/>
	</joint>
	<!-- Add similar $(arg robot_namespace)/ prefix for remaining links and joints -->
</robot>
